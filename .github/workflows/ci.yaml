name: CI

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main

# env:
#   RUSTFLAGS: -Dwarnings

jobs:
  test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
    steps:
      - uses: actions/checkout@master
      - name: Install mkcert (Linux)
        run: curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64" && chmod +x mkcert-v*-linux-amd64 && sudo cp mkcert-v*-linux-amd64 /usr/local/bin/mkcert && mkcert -install && mkcert localhost
        if: matrix.os == 'ubuntu-latest'

      - name: get-cmake
        uses: lukka/get-cmake@v3.30.2
            
      - name: Install NASM for aws-lc-rs on Windows
        if: runner.os == 'Windows'
        uses: ilammy/setup-nasm@v1

      - name: Install stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --features trillium-static/smol,trillium-testing/smol

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --features trillium-static/tokio,trillium-testing/tokio

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --features trillium-static/async-std,trillium-testing/async-std


  check_fmt_and_docs:
    name: Lints and Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2.7.3
      - name: Format
        run: cargo fmt --all -- --check
      - name: Run cargo-udeps
        uses: aig787/cargo-udeps-action@v1
        with:
          version: latest
          args: --all-targets
      - name: Docs
        run: cargo doc --no-deps
